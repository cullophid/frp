// Generated by CoffeeScript 1.10.0
(function() {
  exports.any = function(f, list) {
    var e, i, len;
    for (i = 0, len = list.length; i < len; i++) {
      e = list[i];
      if (f(e)) {
        return true;
      }
    }
    return false;
  };

  exports.isPromise = function(e) {
    return (e != null) && typeof e.then === 'function';
  };

}).call(this);
rt.equal(helpers.any((function(i) {
          return i === 3;
        }), list), true);
      });
      return it('should return false if the predicate does not return true for any element', function() {
        var list;
        list = [1, 2, 3, 4];
        return assert.equal(helpers.any((function(i) {
          return i === 5;
        }), list), false);
      });
    });
    return describe('isPromise', function() {
      it('should return true if given a promise', function() {
        var prom;
        prom = Promise.resolve(1);
        return assert.equal(helpers.isPromise(prom), true);
      });
      it('should return false if given undefined', function() {
        var prom;
        prom = void 0;
        return assert.equal(helpers.isPromise(prom), false);
      });
      return it('should return false if given any other value', function() {
        var prom;
        prom = 1;
        return assert.equal(helpers.isPromise(prom), false);
      });
    });
  });

}).call(this);
