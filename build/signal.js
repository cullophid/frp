// Generated by CoffeeScript 1.10.0
(function() {
  var assert, signal;

  assert = require('assert');

  signal = require('../signal');

  describe('Signal', function() {
    it('should return the stored value', function() {
      var sig;
      sig = signal(5);
      return assert.equal(sig(), 5);
    });
    it('should return an updated value', function() {
      var sig;
      sig = signal(5);
      sig(6);
      return assert.equal(sig(), 6);
    });
    return it('should call all dependants when updating value', function() {
      var sig1, sig2;
      sig1 = signal(5);
      sig2 = signal(((function(_this) {
        return function(s) {
          return s + 1;
        };
      })(this)), sig1);
      sig1(6);
      return assert.equal(sig2(), 7);
    });
  });

}).call(this);
f (typeof value === 'function') {
        _value = cache(value);
      } else {
        _value = value;
      }
      return emit();
    };
    read = function() {
      if (typeof _value === 'function') {
        return apply(_value, dependencies);
      } else {
        return _value;
      }
    };
    write(initialValue);
    for (i = 0, len = dependencies.length; i < len; i++) {
      d = dependencies[i];
      d.addListener(emit);
    }
    getSet = function(value) {
      if (value != null) {
        return write(value);
      } else {
        return read();
      }
    };
    return Object.assign(getSet, {
      addListener: function(listener) {
        return listeners.push(listener);
      },
      removeListener: function(listener) {
        return listeners = listeners.filter((function(l) {
          return l !== listener;
        }));
      }
    });
  };

}).call(this);
